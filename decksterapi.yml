openapi: 3.0.1
info:
  version: 1.0.0
  title: "DecksterlibApi"
paths: { }
components:
  schemas:
    Protocol_DecksterMessage:
      type: object
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
    Protocol_DecksterRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Protocol_DecksterMessage'
        - type: object
      discriminator:
        propertyName: type
    Protocol_DecksterNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/Protocol_DecksterMessage'
        - type: object
      discriminator:
        propertyName: type
    Protocol_DecksterResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Protocol_DecksterMessage'
        - type: object
      discriminator:
        propertyName: type
    Handshake_ConnectMessage:
      type: object
      allOf:
        - $ref: '#/components/schemas/Protocol_DecksterMessage'
        - type: object
      discriminator:
        propertyName: type
    Uno_UnoRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Protocol_DecksterRequest'
        - type: object
      discriminator:
        propertyName: type
    Uno_UnoResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Protocol_DecksterResponse'
        - type: object
      discriminator:
        propertyName: type
    Uno_UnoGameNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/Protocol_DecksterNotification'
        - type: object        
      discriminator:
        propertyName: type
    CrazyEights_CrazyEightsRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Protocol_DecksterRequest'
        - type: object
      discriminator:
        propertyName: type
    CrazyEights_CrazyEightsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Protocol_DecksterResponse'
        - type: object
      discriminator:
        propertyName: type
    CrazyEights_CrazyEightsNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/Protocol_DecksterNotification'
        - type: object        
      discriminator:
        propertyName: type
    ChatRoom_ChatRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Protocol_DecksterRequest'
        - type: object
      discriminator:
        propertyName: type
    ChatRoom_ChatNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/Protocol_DecksterNotification'
        - type: object
          properties:
            sender:
              type: string
            message:
              type: string
    ChatRoom_ChatResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Protocol_DecksterResponse'
        - type: object
    Handshake_HelloSuccessMessage:
      type: object
      allOf:
        - $ref: '#/components/schemas/Handshake_ConnectMessage'
        - type: object
          properties:
            player:
              type: object
              properties:
                name:
                  type: string
                id:
                  type: object
                points:
                  type: integer
                  format: int32
            connectionId:
              type: object
    Common_PlayerData:
      type: object
      properties:
        name:
          type: string
        id:
          type: object
        points:
          type: integer
          format: int32
    System_Guid:
      type: object
    Handshake_ConnectSuccessMessage:
      type: object
      allOf:
        - $ref: '#/components/schemas/Handshake_ConnectMessage'
        - type: object
    Handshake_ConnectFailureMessage:
      type: object
      allOf:
        - $ref: '#/components/schemas/Handshake_ConnectMessage'
        - type: object
          properties:
            errorMessage:
              type: string
    Common_FailureResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Protocol_DecksterResponse'
        - type: object
          properties:
            message:
              type: string
    Uno_UnoFailureResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoResponse'
        - type: object
          properties:
            message:
              type: string
    Uno_UnoSuccessResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoResponse'
        - type: object
    Uno_UnoCardResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoResponse'
        - type: object
          properties:
            card:
              type: object
              properties:
                color:
                  type: string
                value:
                  type: string
    Uno_UnoCard:
      type: object
      properties:
        color:
          type: string
        value:
          type: string
    Uno_PlayerViewOfUnoGame:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoResponse'
        - type: object
          properties:
            cards:
              type: array
              items:
                $ref: '#/components/schemas/Uno_UnoCard'
            topOfPile:
              type: object
              properties:
                color:
                  type: string
                value:
                  type: string
            currentSuit:
              type: string
            stockPileCount:
              type: integer
              format: int32
            discardPileCount:
              type: integer
              format: int32
            otherPlayers:
              type: array
              items:
                $ref: '#/components/schemas/Uno_OtherUnoPlayer'
    Uno_OtherUnoPlayer:
      type: object
      properties:
        name:
          type: string
        numberOfCards:
          type: integer
          format: int32
    Uno_PutCardRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoRequest'
        - type: object
          properties:
            card:
              type: object
              properties:
                color:
                  type: string
                value:
                  type: string
    Uno_PutWildRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoRequest'
        - type: object
          properties:
            card:
              type: object
              properties:
                color:
                  type: string
                value:
                  type: string
            newColor:
              type: string
    Uno_ReadyToPlayRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoRequest'
        - type: object
    Uno_DrawCardRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoRequest'
        - type: object
      discriminator:
        propertyName: type
    Uno_PassRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoRequest'
        - type: object
    Uno_UnoCardsResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoResponse'
        - type: object
          properties:
            card:
              type: object
              properties:
                color:
                  type: string
                value:
                  type: string
    Uno_PlayerPutCardNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoGameNotification'
        - type: object
          properties:
            player:
              type: object
              properties:
                name:
                  type: string
                numberOfCards:
                  type: integer
                  format: int32
            card:
              type: object
              properties:
                color:
                  type: string
                value:
                  type: string
    Uno_PlayerPutWildNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoGameNotification'
        - type: object
          properties:
            player:
              type: object
              properties:
                name:
                  type: string
                numberOfCards:
                  type: integer
                  format: int32
            card:
              type: object
              properties:
                color:
                  type: string
                value:
                  type: string
            newColor:
              type: string
    Uno_PlayerDrewCardNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoGameNotification'
        - type: object
          properties:
            player:
              type: object
              properties:
                name:
                  type: string
                numberOfCards:
                  type: integer
                  format: int32
    Uno_PlayerPassedNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoGameNotification'
        - type: object
          properties:
            player:
              type: object
              properties:
                name:
                  type: string
                numberOfCards:
                  type: integer
                  format: int32
    Uno_ItsYourTurnNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoGameNotification'
        - type: object
          properties:
            playerViewOfGame:
              type: object
              allOf:
                - $ref: '#/components/schemas/Uno_UnoResponse'
                - type: object
                  properties:
                    cards:
                      type: array
                      items:
                        $ref: '#/components/schemas/Uno_UnoCard'
                    topOfPile:
                      type: object
                      properties:
                        color:
                          type: string
                        value:
                          type: string
                    currentSuit:
                      type: string
                    stockPileCount:
                      type: integer
                      format: int32
                    discardPileCount:
                      type: integer
                      format: int32
                    otherPlayers:
                      type: array
                      items:
                        $ref: '#/components/schemas/Uno_OtherUnoPlayer'
    Uno_GameStartedNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoGameNotification'
        - type: object
          properties:
            players:
              type: array
              items:
                $ref: '#/components/schemas/Common_PlayerData'
    Uno_GameEndedNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/Uno_UnoGameNotification'
        - type: object
          properties:
            players:
              type: array
              items:
                $ref: '#/components/schemas/Common_PlayerData'
    CrazyEights_PutCardRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsRequest'
        - type: object
          properties:
            card:
              type: object
              properties:
                rank:
                  type: integer
                  format: int32
                suit:
                  type: string
    Common_Card:
      type: object
      properties:
        rank:
          type: integer
          format: int32
        suit:
          type: string
    CrazyEights_PutEightRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsRequest'
        - type: object
          properties:
            card:
              type: object
              properties:
                rank:
                  type: integer
                  format: int32
                suit:
                  type: string
            newSuit:
              type: string
    CrazyEights_DrawCardRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsRequest'
        - type: object
    CrazyEights_PassRequest:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsRequest'
        - type: object
    CrazyEights_CrazyEightsFailureResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsResponse'
        - type: object
          properties:
            message:
              type: string
    CrazyEights_CardResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsResponse'
        - type: object
          properties:
            card:
              type: object
              properties:
                rank:
                  type: integer
                  format: int32
                suit:
                  type: string
    CrazyEights_PlayerPutCardNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsNotification'
        - type: object
          properties:
            playerId:
              type: object
            card:
              type: object
              properties:
                rank:
                  type: integer
                  format: int32
                suit:
                  type: string
    CrazyEights_PlayerPutEightNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsNotification'
        - type: object
          properties:
            playerId:
              type: object
            card:
              type: object
              properties:
                rank:
                  type: integer
                  format: int32
                suit:
                  type: string
            newSuit:
              type: string
    CrazyEights_PlayerDrewCardNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsNotification'
        - type: object
          properties:
            playerId:
              type: object
    CrazyEights_PlayerPassedNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsNotification'
        - type: object
          properties:
            playerId:
              type: object
    CrazyEights_ItsYourTurnNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsNotification'
        - type: object
          properties:
            playerViewOfGame:
              type: object
              allOf:
                - $ref: '#/components/schemas/CrazyEights_CrazyEightsResponse'
                - type: object
                  properties:
                    cards:
                      type: array
                      items:
                        $ref: '#/components/schemas/Common_Card'
                    topOfPile:
                      type: object
                      properties:
                        rank:
                          type: integer
                          format: int32
                        suit:
                          type: string
                    currentSuit:
                      type: string
                    stockPileCount:
                      type: integer
                      format: int32
                    discardPileCount:
                      type: integer
                      format: int32
                    otherPlayers:
                      type: array
                      items:
                        $ref: '#/components/schemas/CrazyEights_OtherCrazyEightsPlayer'
    CrazyEights_PlayerViewOfGame:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsResponse'
        - type: object
          properties:
            cards:
              type: array
              items:
                $ref: '#/components/schemas/Common_Card'
            topOfPile:
              type: object
              properties:
                rank:
                  type: integer
                  format: int32
                suit:
                  type: string
            currentSuit:
              type: string
            stockPileCount:
              type: integer
              format: int32
            discardPileCount:
              type: integer
              format: int32
            otherPlayers:
              type: array
              items:
                $ref: '#/components/schemas/CrazyEights_OtherCrazyEightsPlayer'
    CrazyEights_OtherCrazyEightsPlayer:
      type: object
      properties:
        name:
          type: string
        numberOfCards:
          type: integer
          format: int32
    CrazyEights_GameStartedNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsNotification'
        - type: object
          properties:
            playerViewOfGame:
              type: object
              allOf:
                - $ref: '#/components/schemas/CrazyEights_CrazyEightsResponse'
                - type: object
                  properties:
                    cards:
                      type: array
                      items:
                        $ref: '#/components/schemas/Common_Card'
                    topOfPile:
                      type: object
                      properties:
                        rank:
                          type: integer
                          format: int32
                        suit:
                          type: string
                    currentSuit:
                      type: string
                    stockPileCount:
                      type: integer
                      format: int32
                    discardPileCount:
                      type: integer
                      format: int32
                    otherPlayers:
                      type: array
                      items:
                        $ref: '#/components/schemas/CrazyEights_OtherCrazyEightsPlayer'
    CrazyEights_GameEndedNotification:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsNotification'
        - type: object
          properties:
            players:
              type: array
              items:
                $ref: '#/components/schemas/Common_PlayerData'
    CrazyEights_CrazyEightsSuccessResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/CrazyEights_CrazyEightsResponse'
        - type: object
    ChatRoom_SendChatMessage:
      type: object
      allOf:
        - $ref: '#/components/schemas/ChatRoom_ChatRequest'
        - type: object
          properties:
            message:
              type: string